[{"E:\\kawanso\\front-end-exercise-solution\\src\\index.tsx":"1","E:\\kawanso\\front-end-exercise-solution\\src\\reportWebVitals.ts":"2","E:\\kawanso\\front-end-exercise-solution\\src\\App.tsx":"3","E:\\kawanso\\front-end-exercise-solution\\src\\compnents\\ListTasks.tsx":"4","E:\\kawanso\\front-end-exercise-solution\\src\\compnents\\SingleTask.tsx":"5","E:\\kawanso\\front-end-exercise-solution\\src\\compnents\\CreateTask.tsx":"6","E:\\kawanso\\front-end-exercise-solution\\src\\utilities\\utils.ts":"7"},{"size":500,"mtime":1611230604753,"results":"8","hashOfConfig":"9"},{"size":425,"mtime":1611230604753,"results":"10","hashOfConfig":"9"},{"size":564,"mtime":1611256278375,"results":"11","hashOfConfig":"9"},{"size":3609,"mtime":1611264333722,"results":"12","hashOfConfig":"9"},{"size":2505,"mtime":1611265019483,"results":"13","hashOfConfig":"9"},{"size":3002,"mtime":1611265073891,"results":"14","hashOfConfig":"9"},{"size":89,"mtime":1611264457031,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1cdf2lh",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\kawanso\\front-end-exercise-solution\\src\\index.tsx",[],["32","33"],"E:\\kawanso\\front-end-exercise-solution\\src\\reportWebVitals.ts",[],"E:\\kawanso\\front-end-exercise-solution\\src\\App.tsx",["34","35"],"E:\\kawanso\\front-end-exercise-solution\\src\\compnents\\ListTasks.tsx",[],"E:\\kawanso\\front-end-exercise-solution\\src\\compnents\\SingleTask.tsx",["36","37"],"E:\\kawanso\\front-end-exercise-solution\\src\\compnents\\CreateTask.tsx",["38","39"],"import React, { ReactElement } from 'react'\r\n\r\nimport TextField from '@material-ui/core/TextField'\r\nimport { Box, makeStyles, Grid, Button, Container } from '@material-ui/core'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { getId } from '../utilities/utils'\r\nconst CreateTasksStyles = makeStyles(() => ({\r\n  root: {\r\n    width: '40%',\r\n    paddingTop: '5%',\r\n  },\r\n  _box: {\r\n    padding: '4%',\r\n  },\r\n  mainGrid: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: 'center',\r\n  },\r\n  inputGrid: {},\r\n  buttonGrid: {\r\n    paddingTop: '2%',\r\n  },\r\n}))\r\n\r\ninterface Props {}\r\ninterface ITask {\r\n  id: string\r\n  name: string\r\n}\r\nexport default function CreateTask({}: Props): ReactElement {\r\n  const classes = CreateTasksStyles()\r\n  const history = useHistory()\r\n  const [taskName, setTaskName] = React.useState<string>('')\r\n\r\n  const createTask = () => {\r\n    try {\r\n      if (taskName) {\r\n        const taskArray: any = localStorage?.getItem('tasks')\r\n        const taskJSON: ITask[] = JSON.parse(taskArray)\r\n        if (taskJSON && taskJSON?.length !== 0) {\r\n          let id = getId()\r\n          let isNotUniqueId = false\r\n          taskJSON.map((singleTask) => {\r\n            if (singleTask?.id === id) {\r\n              isNotUniqueId = true\r\n            }\r\n          })\r\n          if (isNotUniqueId) {\r\n            let task: ITask = {\r\n              id: getId(),\r\n              name: taskName,\r\n            }\r\n            taskJSON.push(task)\r\n          } else {\r\n            let task: ITask = {\r\n              id,\r\n              name: taskName,\r\n            }\r\n\r\n            taskJSON.push(task)\r\n          }\r\n\r\n          localStorage.setItem('tasks', JSON.stringify(taskJSON))\r\n\r\n          history.push('/list-tasks')\r\n        } else {\r\n          let task: ITask = {\r\n            id: getId(),\r\n            name: taskName,\r\n          }\r\n          let tasksArray: ITask[] = []\r\n          tasksArray.push(task)\r\n          localStorage.setItem('tasks', JSON.stringify(tasksArray))\r\n\r\n          history.push('/list-tasks')\r\n        }\r\n      } else {\r\n        console.log('Error validation')\r\n      }\r\n    } catch (error) {\r\n      console.log('Error ', error)\r\n    }\r\n  }\r\n  return (\r\n    <Container className={classes.root}>\r\n      <Box boxShadow={2} className={classes._box}>\r\n        <Grid className={classes.mainGrid}>\r\n          <Grid xs={6} className={classes.inputGrid}>\r\n            <TextField\r\n              required\r\n              id='standard-required'\r\n              label='Task Name'\r\n              onChange={(e) => {\r\n                setTaskName(e.target.value)\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid xs={6} className={classes.buttonGrid}>\r\n            <Button\r\n              variant='contained'\r\n              size='medium'\r\n              color='primary'\r\n              onClick={createTask}\r\n            >\r\n              Add task\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Container>\r\n  )\r\n}\r\n","E:\\kawanso\\front-end-exercise-solution\\src\\utilities\\utils.ts",[],{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":2,"column":8,"nodeType":"46","messageId":"47","endLine":2,"endColumn":12},{"ruleId":"44","severity":1,"message":"48","line":8,"column":3,"nodeType":"46","messageId":"47","endLine":8,"endColumn":7},{"ruleId":"49","severity":1,"message":"50","line":43,"column":27,"nodeType":"51","messageId":"52","endLine":43,"endColumn":29},{"ruleId":"49","severity":1,"message":"50","line":61,"column":27,"nodeType":"51","messageId":"52","endLine":61,"endColumn":29},{"ruleId":"53","severity":1,"message":"54","line":31,"column":36,"nodeType":"55","messageId":"56","endLine":31,"endColumn":45},{"ruleId":"49","severity":1,"message":"50","line":44,"column":37,"nodeType":"51","messageId":"52","endLine":44,"endColumn":39},"no-native-reassign",["57"],"no-negated-in-lhs",["58"],"@typescript-eslint/no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","no-global-assign","no-unsafe-negation"]